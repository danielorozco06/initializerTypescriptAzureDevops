{
  // Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. The scope defines in watch languages the snippet is applicable. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted.Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  "Jest spyOn with mockImplementationOnce": {
    "scope": "typescript, javascript",
    "prefix": "jSpyImpOnce",
    "body": [
      "jest.spyOn(${2:Function})",
      "\t.mockImplementationOnce(async () => ${1:Return} );",
      "\n$0"
    ],
    "description": "Create Jest spyOn with mockImplementationOnce function"
  },
  "Jest beforeEach resetAllMockd": {
    "scope": "typescript, javascript",
    "prefix": "jBefReset",
    "body": ["beforeEach(async () => {", "\tjest.resetAllMocks();", "});", "\n$0"],
    "description": "Create Jest beforeEach resetAllMocks()"
  }
}
